/**
* Main flow control, initializes, displays menu and options.
*
*/

  SCRIPT main
  .redef obj.brightness hashPtr.1
  .redef obj.unitTest hashPtr.2
  .redef obj.textlayer hashPtr.3
  .redef obj.cursor hashPtr.4
  .redef obj.optionSong hashPtr.5
  .redef obj.optionSubSong hashPtr.6
  .redef obj.optionEcho hashPtr.7

  ;set video mode
  sep #$20
  lda.b #(BGMODE_MODE_1 | BGMODE_PRIORITY_LAYER_3)
  sta.w ScreenMode
  lda.w MainScreen
  and.b #(T_BG1_ENABLE | T_BG2_ENABLE | T_BG3_ENABLE | T_BG4_ENABLE) ~$ff
  sta.w MainScreen
  rep #$31

  SCRIPT_NEW Brightness.CLS.PTR obj.brightness
  lda.w #BRIGHTNESS.FULL
  SCRIPT_CALL Brightness.set.MTD obj.brightness

  SCRIPT_NEW background.textlayer.8x8.CLS.PTR obj.textlayer

  SCRIPT_CALL background.textlayer.8x8.setCursorPosition.MTD obj.textlayer $10 $10

  lda #text.misc.header
  SCRIPT_CALL background.textlayer.8x8.print.MTD obj.textlayer
  
  pei (obj.textlayer)
  pei (obj.textlayer+2)
  pei (iterator.self)
  pei (iterator.self+2)
  SCRIPT_NEW option.command.callback.CLS.PTR obj.optionSong $1c $44 OPTION.COMMAND.PLAY_SONG Song.walkman_snippers.PTR text.misc.song
  pla
  pla
  pla
  pla

  pei (obj.textlayer)
  pei (obj.textlayer+2)
  pei (iterator.self)
  pei (iterator.self+2)
  SCRIPT_NEW option.command.callback.CLS.PTR obj.optionSubSong $1c $54 OPTION.COMMAND.PLAY_SUBSONG $1f text.misc.subSong
  pla
  pla
  pla
  pla

  pei (obj.textlayer)
  pei (obj.textlayer+2)
  pei (iterator.self)
  pei (iterator.self+2)
  SCRIPT_NEW option.command.callback.CLS.PTR obj.optionEcho $1c $64 OPTION.COMMAND.SET_ECHO $1 text.misc.echo
  pla
  pla
  pla
  pla

  SCRIPT_CALL background.textlayer.8x8.flush.MTD obj.textlayer
  
  lda.w #:oncommand.confirmEnter.CLB
  sta this.oncommand+2
  lda.w #oncommand.confirmEnter.CLB
  sta this.oncommand

  SCRIPT_NEW sprite.cursor.CLS.PTR obj.cursor INPUT.DEVICE.ID.0

  AUDIO_SET AUDIO.VOLUME.FULL

  SAVE
  rts

.def OFFSET 3

  CALLBACK oncommand.confirmEnter
  lda OBJECT.CALL.ARG.1+OFFSET,s

  cmp #OPTION.COMMAND.PLAY_SONG
  bne +
    lda OBJECT.CALL.ARG.2+OFFSET,s
    SCRIPT_JSR core.audio.playSong
    sec
    rtl

+
  cmp #OPTION.COMMAND.PLAY_SUBSONG
  bne +
    lda OBJECT.CALL.ARG.2+OFFSET,s
    SCRIPT_JSR core.audio.playSubSong
    sec
    rtl

+
  cmp #OPTION.COMMAND.SET_ECHO
  bne +
    ldx.w #ECHO.VOLUME.MUTE
    lda OBJECT.CALL.ARG.2+OFFSET,s
    beq ++
      ldx.w #ECHO.VOLUME.FULL
++
    txa
    SCRIPT_JSR core.audio.setEchoVolume
    sec
    rtl

+
  clc
  rtl
